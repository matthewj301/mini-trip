# Custom Macros
[gcode_macro CustomVariables]
description: Custom variable storage macro
variable_slicer: "No slicer"
variable_filament_type: "not_set"
variable_ercf_tool: -1
variable_pla_skew_profile: "pla_skew"
#variable_asa_skew_profile: "asa_skew"
#variable_petg_skew_profile: 
gcode:
  ECHO_CUSTOM_VARS

[gcode_macro RESTORE_CUSTOM_VARIABLE_DEFAULTS]
description: Restores CustomVariable macro default values, to be run after a print completes
gcode:
  SET_GCODE_VARIABLE MACRO=CustomVariables VARIABLE=ercf_tool VALUE=-1
  SET_GCODE_VARIABLE MACRO=CustomVariables VARIABLE=filament_type VALUE='"not_set"'


[gcode_macro ECHO_CUSTOM_VARS]
description: Echo custom variables to the console.
gcode:
  {% for var, value in printer["gcode_macro CustomVariables"].items() %}
    {action_respond_info(var ~ ": " ~ value)}
  {% endfor %}

[gcode_macro M109]
description: This makes Klipper resume immediately after the hotend reaches the specified temp. https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
description: This makes Klipper resume immediately after the bed reaches the specified temp. https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

# Macro to perform a modified z_tilt supporting stowable probes
[gcode_macro Z_TILT_ADJUST]
rename_existing: Z_TILT_ADJUST_ORIG
gcode:
    {% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
    DEPLOY_PROBE
    {% endif %}
    Z_TILT_ADJUST_ORIG
    {% if printer["gcode_macro RatOS"].z_probe == 'stowable' %}
    STOW_PROBE
    {% endif %}


[gcode_macro _USER_START_PRINT_AFTER_HEATING_BED]
description: Custom gcode that runs right after the bed has reached temp, before the internal _START_PRINT_AFTER_HEATING_BED
gcode:
  {% set FILAMENT_TYPE = printer["gcode_macro CustomVariables"].filament_type %}
  CLEAR_PAUSE

  M117 Adjusting Z tilt...
  RESPOND MSG="Adjusting Z tilt..."
  # Adjust bed tilt
  Z_TILT_ADJUST
  M117 Rehoming Z after Z tilt adjustment...
  RESPOND MSG="Rehoming Z after Z tilt adjustment..."
  # Home again as Z will have changed after tilt adjustment and bed heating.
  G28 Z

  {% if FILAMENT_TYPE == "not_set" %}
    RESPOND MSG="filament_type not set by slicer, aborting print..."
    CANCEL_PRINT
  {% endif %}


[gcode_macro _USER_START_PRINT_AFTER_HEATING_EXTRUDER]
description: Custom gcode that runs just before _START_PRINT_AFTER_HEATING_EXTRUDER
gcode:
  {% set SLICER = printer["gcode_macro CustomVariables"].slicer %}
  {% set FILAMENT_TYPE = printer["gcode_macro CustomVariables"].filament_type %}

  RESPOND MSG="SLICER: {SLICER}"
  RESPOND MSG="FILAMENT TYPE: {FILAMENT_TYPE}"
  
  {% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}
    # Cancel nevermore filter shutoff if it is running, this stops the delayed_gcode from running midway through a new print, when the filter should actually be running
    UPDATE_DELAYED_GCODE ID=nevermore_filter_delayed_stop DURATION=0
	NEVERMORE_FILTER_START
  {% endif %}
  

[gcode_macro _USER_END_PRINT_AFTER_HEATERS_OFF]
description: Custom gcode that runs right after right before the END_PRINT_AFTER_HEATERS_OFF macro is called in END_PRINT
gcode:
  UPDATE_DELAYED_GCODE ID=nevermore_filter_delayed_stop DURATION=1800
  RESTORE_CUSTOM_VARIABLE_DEFAULTS

[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode:
  STOW_IF_DEPLOYED
  